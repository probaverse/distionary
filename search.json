[{"path":[]},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://distionary.netlify.app/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://distionary.netlify.app/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to distionary","title":"Contributing to distionary","text":"outlines propose change distionary. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://distionary.netlify.app/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to distionary","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://distionary.netlify.app/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to distionary","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://distionary.netlify.app/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to distionary","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"vincenzocoia/distionary\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://distionary.netlify.app/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to distionary","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://distionary.netlify.app/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to distionary","text":"Please note distionary project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://distionary.netlify.app/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 distionary authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://distionary.netlify.app/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with distionary","title":"Getting help with distionary","text":"Thanks using distionary! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://distionary.netlify.app/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with distionary","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://distionary.netlify.app/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with distionary","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://distionary.netlify.app/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with distionary","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://distionary.netlify.app/articles/evaluate.html","id":"functional-representations-of-a-distribution","dir":"Articles","previous_headings":"","what":"Functional Representations of a Distribution","title":"Evaluating distributions","text":"distribution can represented different functions, density function, cumulative distribution function, others. distplyr, can: evaluate function directly calling eval_*; evaluate function enframe results together function arguments enframe_*; get function using get_*. representations corresponding distplyr functions: functions take distribution object first argument, eval_* enframe_* second argument named indicating evaluate function. argument vectorized. example evaluating hazard function random sample generator Uniform(-1,1) distribution, enframing density: enframe() works particularly well tibbles tidyr::unnest():","code":"eval_hazard(d, at = 0:10) #>  [1]   1 Inf NaN NaN NaN NaN NaN NaN NaN NaN NaN enframe_density(d, at = 0:10) #> # A tibble: 11 × 2 #>     .arg density #>    <int>   <dbl> #>  1     0     0.5 #>  2     1     0.5 #>  3     2     0   #>  4     3     0   #>  5     4     0   #>  6     5     0   #>  7     6     0   #>  8     7     0   #>  9     8     0   #> 10     9     0   #> 11    10     0 set.seed(10) # half_marathon <- tribble( #   ~ person, ~ race_time_min, #   \"Vincenzo\", dst_norm(130, 25), #   \"Colleen\", dst_norm(110, 13), #   \"Regina\", dst_norm(115, 20) # )  # half_marathon %>%  #   mutate(quartiles = map(race_time_min, enframe_quantile, at = 1:3 / 4)) %>%  #   unnest(quartiles)"},{"path":"https://distionary.netlify.app/articles/evaluate.html","id":"drawing-a-random-sample","dir":"Articles","previous_headings":"","what":"Drawing a random sample","title":"Evaluating distributions","text":"draw random sample distribution, use realise() realize() function: can read call “realise distribution d five times”. default, n set 1, realizing distribution converts numeric draw: default especially useful working distributions tibble: Perhaps surprisingly, distplyr consider realise() functional representation distribution, even though random sampling falls family stats::p*/d*/q*/r* functions. ’s impossible perfectly describe distribution based sample.","code":"realise(d, n = 5) #> [1]  0.01495641 -0.38646299 -0.14618467  0.38620416 -0.82972806 realise(d) #> [1] -0.5491268 # half_marathon %>%  #   mutate(actual_time_min = map_dbl(race_time_min, realise))"},{"path":"https://distionary.netlify.app/articles/evaluate.html","id":"properties-of-distributions","dir":"Articles","previous_headings":"","what":"Properties of Distributions","title":"Evaluating distributions","text":"Distributions various numeric properties. Common examples mean variance, many others well. table properties incorporated distplyr: properties original Uniform(-1, 1) distribution:","code":"mean(d) #> [1] 0 stdev(d) #> [1] 0.5773503 evi(d) #> [1] -1"},{"path":"https://distionary.netlify.app/articles/specify.html","id":"parametric-families","dir":"Articles","previous_headings":"","what":"1. Parametric Families","title":"Specify a distribution","text":"include distributions like Normal, Exponential, Poisson, etc. distplyr includes distributions present base R’s r*/p*/d*/q* selection distributions. example, Normal distribution base R associated functions rnorm() etc. distplyr: distplyr also includes common distributions present base R, generalized Pareto distribution: November 2020: package gains stability structure, limited number distributions – plenty available --distant future.","code":"dst_norm(0, 1) #> [1] \"norm\"       \"parametric\" \"dst\"        #>  #>  name : #> [1] \"norm\" dst_gpd(0, 1, 1) #> [1] \"gpd\"        \"parametric\" \"dst\"        #>  #>  name : #> [1] \"gpd\""},{"path":"https://distionary.netlify.app/articles/specify.html","id":"empirical-distributions","dir":"Articles","previous_headings":"","what":"2. Empirical Distributions","title":"Specify a distribution","text":"Whereas base R ecdf() function handle empirical distributions, distplyr provides full functionality dst_empirical(). Empirical distribution hp values mtcars dataset: “step” name comes cdf:  can also weigh outcomes differently. useful explicitly specifying probability mass function, well applications using kernel smoothing find conditional distribution. estimate conditional distribution hp given disp = 150, cdf depicted dashed line compared o marginal solid line:  weighting provides us far informative prediction hp disp = 150 compared loess, just gives us mean: distribution, can get much , 90% prediction interval: ’s proportion variance ’s reduced compared marginal:","code":"(hp <- dst_empirical(hp, data = mtcars)) #> [1] \"finite\" \"dst\"    #>  #>  probabilities : #> # A tibble: 22 × 2 #>    location   size #>       <dbl>  <dbl> #>  1       52 0.0312 #>  2       62 0.0312 #>  3       65 0.0312 #>  4       66 0.0625 #>  5       91 0.0312 #>  6       93 0.0312 #>  7       95 0.0312 #>  8       97 0.0312 #>  9      105 0.0312 #> 10      109 0.0312 #> # ℹ 12 more rows plot(hp, \"cdf\", n = 501) K <- function(x) dnorm(x, sd = 25) hp2 <- dst_empirical(hp, data = mtcars, weights = K(disp - 150)) plot(hp, \"cdf\", n = 1001) plot(hp2, \"cdf\", n = 1001, lty = 2, add = TRUE) mean(hp2) #> [1] 109.961 eval_quantile(hp2, at = c(0.05, 0.95)) #> [1]  62 175 1 - variance(hp2) / variance(hp) #> [1] 0.8031741"},{"path":"https://distionary.netlify.app/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vincenzo Coia. Author, maintainer. Amogh Joshi. Author. Shuyi Tan. Author. Zhipeng Zhu. Author.","code":""},{"path":"https://distionary.netlify.app/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Coia V, Joshi , Tan S, Zhu Z (2024). distionary: Create Evaluate Univariate Probability Distributions. R package version 0.0.2, https://probaverse.github.io/distionary/.","code":"@Manual{,   title = {distionary: Create and Evaluate Univariate Probability Distributions},   author = {Vincenzo Coia and Amogh Joshi and Shuyi Tan and Zhipeng Zhu},   year = {2024},   note = {R package version 0.0.2},   url = {https://probaverse.github.io/distionary/}, }"},{"path":"https://distionary.netlify.app/index.html","id":"distionary-","dir":"","previous_headings":"","what":"Create and Evaluate Univariate Probability Distributions","title":"Create and Evaluate Univariate Probability Distributions","text":"distionary: makes standard probability distributions available, like Normal, Poisson, empirical distributions – even distribution, provides framework evaluating probability distributions. distionary package useful augmented distplyr package, provides grammar distribution manipulation.","code":""},{"path":"https://distionary.netlify.app/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create and Evaluate Univariate Probability Distributions","text":"distionary CRAN yet. can download development version GitHub : , install distplyr, distionary come along .","code":"# install.packages(\"devtools\") devtools::install_github(\"vincenzocoia/distionary\")"},{"path":"https://distionary.netlify.app/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create and Evaluate Univariate Probability Distributions","text":"can make distributions standard families, like beta Poisson: can also make empirical distributions data: can evaluate different distributional forms, density pmf: , can enframe results tibble: Evaluate properties distributions: can make distributions, . Want make distribution whose density decays linearly 0 ? Just ensure p/d/q functions available: Hazard function: Mean:","code":"library(distionary) (d_beta <- dst_beta(2, 4)) #> [1] \"beta\"       \"parametric\" \"dst\"        #>  #>  name : #> [1] \"beta\" (d_pois <- dst_pois(1.2)) #> [1] \"pois\"       \"parametric\" \"dst\"        #>  #>  name : #> [1] \"pois\" x <- c(4.1, 2.3, 3.4, 5.5, 1.0, 6.8) (d_emp <- dst_empirical(x)) #> [1] \"finite\" \"dst\"    #>  #>  probabilities : #> # A tibble: 6 × 2 #>   location  size #>      <dbl> <dbl> #> 1      1   0.167 #> 2      2.3 0.167 #> 3      3.4 0.167 #> 4      4.1 0.167 #> 5      5.5 0.167 #> 6      6.8 0.167 eval_density(d_beta, at = c(0.1, 0.2)) #> [1] 1.458 2.048 eval_pmf(d_pois, at = c(1, 1.5, 3)) #> [1] 0.36143305 0.00000000 0.08674393 enframe_cdf(d_beta, d_pois, d_emp, at = c(0.1, 0.6, 1.5, 3)) #> # A tibble: 4 × 4 #>    .arg cdf_d_beta cdf_d_pois cdf_d_emp #>   <dbl>      <dbl>      <dbl>     <dbl> #> 1   0.1     0.0815      0.301     0     #> 2   0.6     0.913       0.301     0     #> 3   1.5     1           0.663     0.167 #> 4   3       1           0.966     0.333 mean(d_beta) #> [1] 0.3333333 skewness(d_pois) #> [1] 0.9128709 range(d_emp) #> [1] 1.0 6.8 # dlinear <- function(x, a) (a - x) / (a^2 / 2) # plinear <- function(x, a) x * (a - x / 2) / (a^2 / 2) # qlinear <- function(p, a) a * (1 - sqrt(1 - p)) # (my_dst <- dst_parametric(\"linear\", a = 3, .variable = \"continuous\")) # plot(my_dst, \"hazard\", from = 0, to = 3) # mean(my_dst)"},{"path":"https://distionary.netlify.app/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Create and Evaluate Univariate Probability Distributions","text":"Please note distionary project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://distionary.netlify.app/reference/aggregate_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate discrete values — aggregate_weights","title":"Aggregate discrete values — aggregate_weights","text":"Aggregates discrete values together weights data frame tibble.","code":""},{"path":"https://distionary.netlify.app/reference/aggregate_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate discrete values — aggregate_weights","text":"","code":"aggregate_weights(y, weights, sum_to_one = FALSE)"},{"path":"https://distionary.netlify.app/reference/aggregate_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate discrete values — aggregate_weights","text":"y Vector outcomes. weights Vector weights, one y. need sum one, must negative. sum_to_one Logical; weights normalized sum 1? Default FALSE.","code":""},{"path":"https://distionary.netlify.app/reference/aggregate_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate discrete values — aggregate_weights","text":"Data frame following columns: location: Increasing vector unique values y positive weight. size: Weights corresponding outcome.","code":""},{"path":"https://distionary.netlify.app/reference/aggregate_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate discrete values — aggregate_weights","text":"vector outcomes y matching vector weights, aggregate_weights() provides single non-zero, non-NA weight per unique value y.","code":""},{"path":"https://distionary.netlify.app/reference/bracket_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Present parameters using bracket notation — bracket_parameters","title":"Present parameters using bracket notation — bracket_parameters","text":"distributions parameters, function places parameters bracket notation, (0, 1) Normal distribution mean 0 variance 1.","code":""},{"path":"https://distionary.netlify.app/reference/bracket_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present parameters using bracket notation — bracket_parameters","text":"","code":"bracket_parameters(distribution, param_digits = 2)"},{"path":"https://distionary.netlify.app/reference/bracket_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present parameters using bracket notation — bracket_parameters","text":"distribution single distplyr distribution parameters() function can applied. param_digits Number significant digits include output.","code":""},{"path":"https://distionary.netlify.app/reference/bracket_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Present parameters using bracket notation — bracket_parameters","text":"single character parameters separated commas sandwiched brackets.","code":""},{"path":"https://distionary.netlify.app/reference/cdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Distribution Function — eval_cdf","title":"Cumulative Distribution Function — eval_cdf","text":"Access distribution's cumulative distribution function (cdf).","code":""},{"path":"https://distionary.netlify.app/reference/cdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Distribution Function — eval_cdf","text":"","code":"eval_cdf(distribution, at)  enframe_cdf(..., at, arg_name = \".arg\", fn_prefix = \"cdf\", sep = \"_\")"},{"path":"https://distionary.netlify.app/reference/cdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Distribution Function — eval_cdf","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/cdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Distribution Function — eval_cdf","text":"evaluated cdf vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/cdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Distribution Function — eval_cdf","text":"","code":"d1 <- dst_unif(0, 4) d2 <- dst_pois(1.1) eval_cdf(d1, at = 0:4) #> [1] 0.00 0.25 0.50 0.75 1.00 enframe_cdf(d1, at = 0:4) #> # A tibble: 5 × 2 #>    .arg   cdf #>   <int> <dbl> #> 1     0  0    #> 2     1  0.25 #> 3     2  0.5  #> 4     3  0.75 #> 5     4  1    enframe_cdf(d1, d2, at = 0:4) #> # A tibble: 5 × 3 #>    .arg cdf_d1 cdf_d2 #>   <int>  <dbl>  <dbl> #> 1     0   0     0.333 #> 2     1   0.25  0.699 #> 3     2   0.5   0.900 #> 4     3   0.75  0.974 #> 5     4   1     0.995"},{"path":"https://distionary.netlify.app/reference/chf.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Hazard Function — eval_chf","title":"Cumulative Hazard Function — eval_chf","text":"Access distribution's cumulative hazard function (chf).","code":""},{"path":"https://distionary.netlify.app/reference/chf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Hazard Function — eval_chf","text":"","code":"eval_chf(distribution, at)  enframe_chf(..., at, arg_name = \".arg\", fn_prefix = \"chf\", sep = \"_\")"},{"path":"https://distionary.netlify.app/reference/chf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Hazard Function — eval_chf","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/chf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Hazard Function — eval_chf","text":"evaluated cumulative hazard vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/chf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Hazard Function — eval_chf","text":"","code":"d <- dst_unif(0, 4) eval_chf(d, at = 0:4) #> [1] 0.0000000 0.2876821 0.6931472 1.3862944       Inf enframe_chf(d, at = 0:4) #> # A tibble: 5 × 2 #>    .arg     chf #>   <int>   <dbl> #> 1     0   0     #> 2     1   0.288 #> 3     2   0.693 #> 4     3   1.39  #> 5     4 Inf"},{"path":"https://distionary.netlify.app/reference/degenerate.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Degenerate Distribution — dst_degenerate","title":"Make a Degenerate Distribution — dst_degenerate","text":"Makes distribution belonging degenerate family distributions. , distributions fixed values.","code":""},{"path":"https://distionary.netlify.app/reference/degenerate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Degenerate Distribution — dst_degenerate","text":"","code":"dst_degenerate(location)  is_degenerate(object)  is.degenerate(object)"},{"path":"https://distionary.netlify.app/reference/degenerate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Degenerate Distribution — dst_degenerate","text":"location Parameter distribution family. object Object test","code":""},{"path":"https://distionary.netlify.app/reference/degenerate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Degenerate Distribution — dst_degenerate","text":"Object class \"dst\".","code":""},{"path":"https://distionary.netlify.app/reference/degenerate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a Degenerate Distribution — dst_degenerate","text":"","code":"require(graphics) d <- dst_degenerate(5) plot(d, \"quantile\")"},{"path":"https://distionary.netlify.app/reference/density.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Density Function — eval_density","title":"Probability Density Function — eval_density","text":"Access distribution's probability density function (pdf).","code":""},{"path":"https://distionary.netlify.app/reference/density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Density Function — eval_density","text":"","code":"eval_density(distribution, at, strict = TRUE)  enframe_density(   ...,   at,   arg_name = \".arg\",   fn_prefix = \"density\",   sep = \"_\",   strict = TRUE )"},{"path":"https://distionary.netlify.app/reference/density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability Density Function — eval_density","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. strict evaluate density exists? TRUE ; FALSE, evaluates derivative cdf. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability Density Function — eval_density","text":"evaluated density vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability Density Function — eval_density","text":"","code":"d <- dst_unif(0, 4) eval_density(d, at = 0:4) #> [1] 0.25 0.25 0.25 0.25 0.25 enframe_density(d, at = 0:4) #> # A tibble: 5 × 2 #>    .arg density #>   <int>   <dbl> #> 1     0    0.25 #> 2     1    0.25 #> 3     2    0.25 #> 4     3    0.25 #> 5     4    0.25 eval_density(dst_pois(1), at = 0:4, strict = FALSE) #> [1] 0 0 0 0 0"},{"path":"https://distionary.netlify.app/reference/directional_inverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Algorithm to Compute a Directional Inverse — directional_inverse","title":"Algorithm to Compute a Directional Inverse — directional_inverse","text":"Calculates smallest value function f evaluates greater equal y -- , left inverse f y. Intended internal use .","code":""},{"path":"https://distionary.netlify.app/reference/directional_inverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algorithm to Compute a Directional Inverse — directional_inverse","text":"","code":"directional_inverse(distribution, p, low, high, tol, maxiter, direction)"},{"path":"https://distionary.netlify.app/reference/directional_inverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algorithm to Compute a Directional Inverse — directional_inverse","text":"distribution distribution access cdf. p Single value calculate left inverse. low, high Single numeric values forming range within search solution. tol, maxiter Tolerance (small positive number) maximum number iterations direction One \"left\" calculating left-inverse, \"right\" calculating right-inverse.","code":""},{"path":"https://distionary.netlify.app/reference/directional_inverse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Algorithm to Compute a Directional Inverse — directional_inverse","text":"algorithm works progressively cutting specified range half, width range k iterations 1/2^k times original width.","code":""},{"path":"https://distionary.netlify.app/reference/discrete_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for finding discrete values — next_discrete_finite","title":"Helper functions for finding discrete values — next_discrete_finite","text":"*_discrete_finite finds discrete values finite set possibilities. *_discret_natural finds discrete values amongst natural numbers (including 0).","code":""},{"path":"https://distionary.netlify.app/reference/discrete_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for finding discrete values — next_discrete_finite","text":"","code":"next_discrete_finite(x, from, n, include_from)  prev_discrete_finite(x, from, n, include_from)  next_discrete_natural(from, n, include_from)  prev_discrete_natural(from, n, include_from)"},{"path":"https://distionary.netlify.app/reference/discrete_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for finding discrete values — next_discrete_finite","text":"x vector possible discrete values. n Number discrete values find.","code":""},{"path":"https://distionary.netlify.app/reference/discretes.html","id":null,"dir":"Reference","previous_headings":"","what":"Probing discrete values in a distribution — next_discrete","title":"Probing discrete values in a distribution — next_discrete","text":"next_discrete() prev_discrete() find n discrete values distribution next reference point. num_discretes() finds number discrete values within range. has_infinite_discretes() checks whether infinite amount discrete values range values.","code":""},{"path":"https://distionary.netlify.app/reference/discretes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probing discrete values in a distribution — next_discrete","text":"","code":"next_discrete(distribution, from, n = 1L, include_from = FALSE)  prev_discrete(distribution, from, n = 1L, include_from = FALSE)  num_discretes(distribution, from, to, include_from, include_to)  has_infinite_discretes(distribution, from = -Inf, to = Inf)"},{"path":"https://distionary.netlify.app/reference/discretes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probing discrete values in a distribution — next_discrete","text":"distribution Distribution , Reference values. n Number discrete values find. include_from, include_to Logical; value included query? value?","code":""},{"path":"https://distionary.netlify.app/reference/discretes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probing discrete values in a distribution — next_discrete","text":"next_discrete() prev_discrete(), vector available discrete points satisfying query. less values available asked via n, values returned. infinite values satisfy query, error thrown; NaN occurs one particular discrete value follows, asking integer comes infinity. num_discretes(), single non-negative integer, possibly infinite. Possibly also NA_integer_ enough information determine . has_infinite_discretes(), single logical, possibly NA enough information determine .","code":""},{"path":"https://distionary.netlify.app/reference/discretes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probing discrete values in a distribution — next_discrete","text":"","code":"next_discrete(dst_pois(1), from = 1.3) #> [1] 2 prev_discrete(dst_pois(1), from = 3, n = 10) #> [1] 2 1 0 next_discrete(dst_norm(0, 1), from = 1.3, n = 4) #> numeric(0)"},{"path":"https://distionary.netlify.app/reference/distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Objects — is_distribution","title":"Distribution Objects — is_distribution","text":"Currently, function makes distribution object nothing . idea can set things downstream, functions set_cdf() set_mean(). idea behind function expected flux.","code":""},{"path":"https://distionary.netlify.app/reference/distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Objects — is_distribution","text":"","code":"is_distribution(object)  is.distribution(object)  distribution(variable = c(\"continuous\", \"discrete\", \"mixed\"))"},{"path":"https://distionary.netlify.app/reference/distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Objects — is_distribution","text":"object Object tested variable variable continuous, discrete, mixed?","code":""},{"path":"https://distionary.netlify.app/reference/distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution Objects — is_distribution","text":"distribution object nothing .","code":""},{"path":"https://distionary.netlify.app/reference/dot-quantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Specific Formulas for Quantities — .quantities","title":"Specific Formulas for Quantities — .quantities","text":"Formulas quantities (mean, variance, skewness, EVI, etc.) select parametric distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dot-quantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specific Formulas for Quantities — .quantities","text":"","code":".quantities"},{"path":"https://distionary.netlify.app/reference/dot-quantities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Specific Formulas for Quantities — .quantities","text":"object class list length 19.","code":""},{"path":"https://distionary.netlify.app/reference/dot-quantities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specific Formulas for Quantities — .quantities","text":"list, distribution gets (named) entry, name given suffix dst_ (\"norm\", \"unif\", etc.). distribution's entry named list expressions, name name quantity matching distionary function name: mean median variance skewness kurtosis_exc range evi expression allowed refer distribution's parameters name.","code":""},{"path":"https://distionary.netlify.app/reference/dot-quantities.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Specific Formulas for Quantities — .quantities","text":"Although R allows us evaluate distributional representations certain parametric distributions functions p, d, q, r prefixes (pnorm(), dnorm(), etc.), R \"come \" formulas quantities mean, variance, EVI, etc. Although quantities can computed distributional representation (integrating quantile function get mean), often inefficient rely computations. therefore include formulas , check using testthat.","code":""},{"path":"https://distionary.netlify.app/reference/dst_bern.html","id":null,"dir":"Reference","previous_headings":"","what":"Bernoulli Distribution — dst_bern","title":"Bernoulli Distribution — dst_bern","text":"Makes distribution belonging family bernoulli distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_bern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bernoulli Distribution — dst_bern","text":"","code":"dst_bern(prob)"},{"path":"https://distionary.netlify.app/reference/dst_bern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bernoulli Distribution — dst_bern","text":"prob Probability success.","code":""},{"path":"https://distionary.netlify.app/reference/dst_bern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bernoulli Distribution — dst_bern","text":"","code":"dst_bern(0.3) #> [1] \"binom\"      \"parametric\" \"dst\"        #>  #>  name : #> [1] \"binom\""},{"path":"https://distionary.netlify.app/reference/dst_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Distribution — dst_beta","title":"Beta Distribution — dst_beta","text":"Makes distribution belonging family beta distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Distribution — dst_beta","text":"","code":"dst_beta(shape1, shape2)"},{"path":"https://distionary.netlify.app/reference/dst_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Distribution — dst_beta","text":"shape1, shape2 Parameters, greater 0. Also known alpha beta.","code":""},{"path":"https://distionary.netlify.app/reference/dst_beta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta Distribution — dst_beta","text":"","code":"dst_beta(2, 3) #> [1] \"beta\"       \"parametric\" \"dst\"        #>  #>  name : #> [1] \"beta\""},{"path":"https://distionary.netlify.app/reference/dst_binom.html","id":null,"dir":"Reference","previous_headings":"","what":"Binomial Distribution — dst_binom","title":"Binomial Distribution — dst_binom","text":"Makes distribution belonging family binomial distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_binom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binomial Distribution — dst_binom","text":"","code":"dst_binom(size, prob)"},{"path":"https://distionary.netlify.app/reference/dst_binom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binomial Distribution — dst_binom","text":"size Number trials. prob Success probability trial.","code":""},{"path":"https://distionary.netlify.app/reference/dst_binom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binomial Distribution — dst_binom","text":"","code":"dst_binom(10, 0.6) #> [1] \"binom\"      \"parametric\" \"dst\"        #>  #>  name : #> [1] \"binom\""},{"path":"https://distionary.netlify.app/reference/dst_cauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Cauchy Distribution — dst_cauchy","title":"Cauchy Distribution — dst_cauchy","text":"Makes distribution belonging family cauchy distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_cauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cauchy Distribution — dst_cauchy","text":"","code":"dst_cauchy(location, scale)"},{"path":"https://distionary.netlify.app/reference/dst_cauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cauchy Distribution — dst_cauchy","text":"location Location parameter scale positive","code":""},{"path":"https://distionary.netlify.app/reference/dst_cauchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cauchy Distribution — dst_cauchy","text":"","code":"dst_cauchy(0, 1) #> [1] \"cauchy\"     \"parametric\" \"dst\"        #>  #>  name : #> [1] \"cauchy\""},{"path":"https://distionary.netlify.app/reference/dst_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Chi-squared Distribution — dst_chisq","title":"Chi-squared Distribution — dst_chisq","text":"Makes distribution belonging family Chi-squared distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chi-squared Distribution — dst_chisq","text":"","code":"dst_chisq(df)"},{"path":"https://distionary.netlify.app/reference/dst_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chi-squared Distribution — dst_chisq","text":"df degrees freedom","code":""},{"path":"https://distionary.netlify.app/reference/dst_chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chi-squared Distribution — dst_chisq","text":"","code":"dst_chisq(3) #> [1] \"chisq\"      \"parametric\" \"dst\"        #>  #>  name : #> [1] \"chisq\""},{"path":"https://distionary.netlify.app/reference/dst_empirical.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Empirical Distribution — dst_empirical","title":"Create an Empirical Distribution — dst_empirical","text":"empirical distribution non-parametric way estimate distribution using data. default, assigns equal probability observations (can overridden weights argument). Identical dst_finite() weights probabilities, except weights need add 1.","code":""},{"path":"https://distionary.netlify.app/reference/dst_empirical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Empirical Distribution — dst_empirical","text":"","code":"dst_empirical(y, data, weights = 1, ...)"},{"path":"https://distionary.netlify.app/reference/dst_empirical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Empirical Distribution — dst_empirical","text":"y <data-masking> Outcomes comprise distribution. either evaluate (atomic) vector, name specified data. data Data frame containing outcomes y /weights. Optional. weights <data-masking> Weights assign outcome y. normalized weights add 1 (unlike dst_finite()), representing probabilities. ... Additional arguments, currently used.","code":""},{"path":"https://distionary.netlify.app/reference/dst_empirical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Empirical Distribution — dst_empirical","text":"object class c(\"finite\", \"dst\").","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/dst_empirical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Empirical Distribution — dst_empirical","text":"","code":"x <- rnorm(100) dst_empirical(x) #> [1] \"finite\" \"dst\"    #>  #>  probabilities : #> # A tibble: 100 × 2 #>    location  size #>       <dbl> <dbl> #>  1    -2.61  0.01 #>  2    -2.44  0.01 #>  3    -2.27  0.01 #>  4    -1.91  0.01 #>  5    -1.91  0.01 #>  6    -1.86  0.01 #>  7    -1.82  0.01 #>  8    -1.70  0.01 #>  9    -1.63  0.01 #> 10    -1.51  0.01 #> # ℹ 90 more rows dst_empirical(value, data = data.frame(value = x)) #> [1] \"finite\" \"dst\"    #>  #>  probabilities : #> # A tibble: 100 × 2 #>    location  size #>       <dbl> <dbl> #>  1    -2.61  0.01 #>  2    -2.44  0.01 #>  3    -2.27  0.01 #>  4    -1.91  0.01 #>  5    -1.91  0.01 #>  6    -1.86  0.01 #>  7    -1.82  0.01 #>  8    -1.70  0.01 #>  9    -1.63  0.01 #> 10    -1.51  0.01 #> # ℹ 90 more rows"},{"path":"https://distionary.netlify.app/reference/dst_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential Distribution — dst_exp","title":"Exponential Distribution — dst_exp","text":"Makes distribution belonging family exponential distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential Distribution — dst_exp","text":"","code":"dst_exp(rate)"},{"path":"https://distionary.netlify.app/reference/dst_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exponential Distribution — dst_exp","text":"rate Rate.","code":""},{"path":"https://distionary.netlify.app/reference/dst_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exponential Distribution — dst_exp","text":"","code":"dst_exp(1) #> [1] \"exp\"        \"parametric\" \"dst\"        #>  #>  name : #> [1] \"exp\""},{"path":"https://distionary.netlify.app/reference/dst_f.html","id":null,"dir":"Reference","previous_headings":"","what":"F Distribution — dst_f","title":"F Distribution — dst_f","text":"Makes distribution belonging family F distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"F Distribution — dst_f","text":"","code":"dst_f(df1, df2)"},{"path":"https://distionary.netlify.app/reference/dst_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"F Distribution — dst_f","text":"df1 degree freedom, positive. df2 degree freedom, positive.","code":""},{"path":"https://distionary.netlify.app/reference/dst_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"F Distribution — dst_f","text":"","code":"dst_f(2, 3) #> [1] \"f\"          \"parametric\" \"dst\"        #>  #>  name : #> [1] \"f\""},{"path":"https://distionary.netlify.app/reference/dst_finite.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Finite Distribution — dst_finite","title":"Create a Finite Distribution — dst_finite","text":"finite distribution assigns probabilities finite collection values. includes categorical distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_finite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Finite Distribution — dst_finite","text":"","code":"dst_finite(y, probs, data, ...)"},{"path":"https://distionary.netlify.app/reference/dst_finite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Finite Distribution — dst_finite","text":"y <data-masking> Outcomes comprise distribution. either evaluate (atomic) vector, name specified data. probs <data-masking> Probabilities corresponding outcomes y. Must negative, must sum 1 (unlike dst_empirical()). either evaluate vector, name specified data. data Data frame containing outcomes y /probabilities probs. Optional. ... Additional arguments, currently used.","code":""},{"path":"https://distionary.netlify.app/reference/dst_finite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Finite Distribution — dst_finite","text":"object class c(\"finite\", \"dst\").","code":""},{"path":"https://distionary.netlify.app/reference/dst_finite.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Finite Distribution — dst_finite","text":"distribution called \"finite\" \"discrete\", discrete distribution infinite amount possible outcomes, Poisson distribution.","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/dst_finite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Finite Distribution — dst_finite","text":"","code":"dst_finite(1:5, probs = rep(0.2, 5)) #> [1] \"finite\" \"dst\"    #>  #>  probabilities : #> # A tibble: 5 × 2 #>   location  size #>      <int> <dbl> #> 1        1   0.2 #> 2        2   0.2 #> 3        3   0.2 #> 4        4   0.2 #> 5        5   0.2"},{"path":"https://distionary.netlify.app/reference/dst_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Distribution — dst_gamma","title":"Gamma Distribution — dst_gamma","text":"Makes distribution belonging family Gamma distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Distribution — dst_gamma","text":"","code":"dst_gamma(shape, rate)"},{"path":"https://distionary.netlify.app/reference/dst_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Distribution — dst_gamma","text":"shape Shape parameter; positive. rate Rate parameter; positive.","code":""},{"path":"https://distionary.netlify.app/reference/dst_gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma Distribution — dst_gamma","text":"","code":"dst_gamma(2, 1) #> [1] \"gamma\"      \"parametric\" \"dst\"        #>  #>  name : #> [1] \"gamma\""},{"path":"https://distionary.netlify.app/reference/dst_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric Distribution — dst_geom","title":"Geometric Distribution — dst_geom","text":"Makes distribution belonging family geometric distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric Distribution — dst_geom","text":"","code":"dst_geom(prob)"},{"path":"https://distionary.netlify.app/reference/dst_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric Distribution — dst_geom","text":"prob Probability success trial; 0 < p <= 1.","code":""},{"path":"https://distionary.netlify.app/reference/dst_geom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric Distribution — dst_geom","text":"","code":"dst_geom(0.4) #> [1] \"geom\"       \"parametric\" \"dst\"        #>  #>  name : #> [1] \"geom\""},{"path":"https://distionary.netlify.app/reference/dst_gev.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Extreme Value Distribution — dst_gev","title":"Generalized Extreme Value Distribution — dst_gev","text":"Makes distribution belonging family Generalized Extreme Value (GEV) distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_gev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Extreme Value Distribution — dst_gev","text":"","code":"dst_gev(location, scale, shape)"},{"path":"https://distionary.netlify.app/reference/dst_gev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Extreme Value Distribution — dst_gev","text":"location Location parameter; numeric. scale Scale parameter; positive numeric. shape Shape parameter; numeric.","code":""},{"path":"https://distionary.netlify.app/reference/dst_gev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Extreme Value Distribution — dst_gev","text":"","code":"dst_gev(0, 1, 1) #> [1] \"gev\"        \"parametric\" \"dst\"        #>  #>  name : #> [1] \"gev\""},{"path":"https://distionary.netlify.app/reference/dst_gpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Pareto Distribution — dst_gpd","title":"Generalized Pareto Distribution — dst_gpd","text":"Makes distribution belonging family generalized Pareto distributions (GPD).","code":""},{"path":"https://distionary.netlify.app/reference/dst_gpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Pareto Distribution — dst_gpd","text":"","code":"dst_gpd(location, scale, shape)"},{"path":"https://distionary.netlify.app/reference/dst_gpd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Pareto Distribution — dst_gpd","text":"location Location parameter; numeric. scale Scale parameter; positive numeric. shape Shape parameter; numeric.","code":""},{"path":"https://distionary.netlify.app/reference/dst_gpd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Pareto Distribution — dst_gpd","text":"Object class \"dst\" GPD.","code":""},{"path":"https://distionary.netlify.app/reference/dst_gpd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Pareto Distribution — dst_gpd","text":"","code":"dst_gpd(0, 1, 1) #> [1] \"gpd\"        \"parametric\" \"dst\"        #>  #>  name : #> [1] \"gpd\""},{"path":"https://distionary.netlify.app/reference/dst_hyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypergeometric Distribution — dst_hyper","title":"Hypergeometric Distribution — dst_hyper","text":"Makes distribution belonging family hypergeometric distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_hyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypergeometric Distribution — dst_hyper","text":"","code":"dst_hyper(K, N, n)"},{"path":"https://distionary.netlify.app/reference/dst_hyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypergeometric Distribution — dst_hyper","text":"K number success states population N population size n number draws","code":""},{"path":"https://distionary.netlify.app/reference/dst_hyper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypergeometric Distribution — dst_hyper","text":"","code":"dst_hyper(1, 5, 10) #> [1] \"hyper\"      \"parametric\" \"dst\"        #>  #>  name : #> [1] \"hyper\""},{"path":"https://distionary.netlify.app/reference/dst_lnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Normal Distribution — dst_lnorm","title":"Log Normal Distribution — dst_lnorm","text":"Makes distribution belonging family Log Normal distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_lnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Normal Distribution — dst_lnorm","text":"","code":"dst_lnorm(meanlog, variancelog)"},{"path":"https://distionary.netlify.app/reference/dst_lnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Normal Distribution — dst_lnorm","text":"meanlog, variancelog Mean variance distribution log scale.","code":""},{"path":"https://distionary.netlify.app/reference/dst_lnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Normal Distribution — dst_lnorm","text":"Object class c(\"lnorm\", \"dst\"). dst_lnorm(0, 1)","code":""},{"path":"https://distionary.netlify.app/reference/dst_nbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative binomial Distribution — dst_nbinom","title":"Negative binomial Distribution — dst_nbinom","text":"Makes distribution belonging family negative binomial distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_nbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative binomial Distribution — dst_nbinom","text":"","code":"dst_nbinom(size, prob)"},{"path":"https://distionary.netlify.app/reference/dst_nbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative binomial Distribution — dst_nbinom","text":"size Target number successful trials; non-negative. prob Probability parameter; 0 1.","code":""},{"path":"https://distionary.netlify.app/reference/dst_nbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative binomial Distribution — dst_nbinom","text":"","code":"dst_nbinom(10, 0.5) #> [1] \"nbinom\"     \"parametric\" \"dst\"        #>  #>  name : #> [1] \"nbinom\""},{"path":"https://distionary.netlify.app/reference/dst_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal (Gaussian) Distribution — dst_norm","title":"Normal (Gaussian) Distribution — dst_norm","text":"Makes distribution belonging family Normal (Gaussian) distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal (Gaussian) Distribution — dst_norm","text":"","code":"dst_norm(mean, variance)"},{"path":"https://distionary.netlify.app/reference/dst_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal (Gaussian) Distribution — dst_norm","text":"mean, variance Mean variance distribution.","code":""},{"path":"https://distionary.netlify.app/reference/dst_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normal (Gaussian) Distribution — dst_norm","text":"","code":"dst_norm(0, 1) #> [1] \"norm\"       \"parametric\" \"dst\"        #>  #>  name : #> [1] \"norm\""},{"path":"https://distionary.netlify.app/reference/dst_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Empty / NULL distribution — dst_null","title":"Empty / NULL distribution — dst_null","text":"Sometimes convenient work distribution object empty, akin NULL value. especially true programmatically outputting distributions, distribution fails fit data. contructor makes distribution object. always evaluates NA vector.","code":""},{"path":"https://distionary.netlify.app/reference/dst_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empty / NULL distribution — dst_null","text":"","code":"dst_null()"},{"path":"https://distionary.netlify.app/reference/dst_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empty / NULL distribution — dst_null","text":"Distribution object class \"dst_null\".","code":""},{"path":"https://distionary.netlify.app/reference/dst_null.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empty / NULL distribution — dst_null","text":"","code":"x <- dst_null() mean(x) #> [1] NA eval_pmf(x, at = 1:10) #>  [1] NA NA NA NA NA NA NA NA NA NA enframe_hazard(x, at = 1:10) #> # A tibble: 10 × 2 #>     .arg hazard #>    <int>  <dbl> #>  1     1     NA #>  2     2     NA #>  3     3     NA #>  4     4     NA #>  5     5     NA #>  6     6     NA #>  7     7     NA #>  8     8     NA #>  9     9     NA #> 10    10     NA"},{"path":"https://distionary.netlify.app/reference/dst_parametric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert p/d/q/r Representations to a Distribution — dst_parametric","title":"Convert p/d/q/r Representations to a Distribution — dst_parametric","text":"distribution p, d, q, r functions available (pnorm(), dnorm(), etc.), dst_parametric() creates distribution draws four functions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_parametric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert p/d/q/r Representations to a Distribution — dst_parametric","text":"","code":"dst_parametric(   .name,   ...,   .variable = c(\"unknown\", \"continuous\", \"discrete\", \"mixed\"),   .env = parent.frame() )"},{"path":"https://distionary.netlify.app/reference/dst_parametric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert p/d/q/r Representations to a Distribution — dst_parametric","text":".name Name distribution. Specifically, string suffix p, d, q, r functions (\"norm\"). ... Name-value pairs parameters. Names must found parameter names p, d, q, r functions. .variable Type random variable represented distribution. Warning: defaults \"unknown\", density, pmf, hazard evaluated. .env Environment beginning search path looking representation, name environment (object can coerced environment .environment().) Defaults calling environment.","code":""},{"path":"https://distionary.netlify.app/reference/dst_parametric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert p/d/q/r Representations to a Distribution — dst_parametric","text":"","code":"d <- dst_parametric(\"norm\", mean = 0, sd = 1, .variable = \"continuous\") eval_density(d, at = -3:3) #> [1] 0.004431848 0.053990967 0.241970725 0.398942280 0.241970725 0.053990967 #> [7] 0.004431848 eval_pmf(d, at = -3:3, strict = FALSE) #> [1] 0 0 0 0 0 0 0 eval_hazard(d, at = -3:3) #> [1] 0.004437839 0.055247863 0.287599971 0.797884561 1.525135276 2.373215533 #> [7] 3.283098655"},{"path":"https://distionary.netlify.app/reference/dst_pois.html","id":null,"dir":"Reference","previous_headings":"","what":"Poisson Distribution — dst_pois","title":"Poisson Distribution — dst_pois","text":"Makes distribution belonging family Poisson distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_pois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poisson Distribution — dst_pois","text":"","code":"dst_pois(lambda)"},{"path":"https://distionary.netlify.app/reference/dst_pois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Poisson Distribution — dst_pois","text":"lambda Mean Poisson distribution.","code":""},{"path":"https://distionary.netlify.app/reference/dst_pois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Poisson Distribution — dst_pois","text":"Object class \"dst\". dst_pois(1)","code":""},{"path":"https://distionary.netlify.app/reference/dst_t.html","id":null,"dir":"Reference","previous_headings":"","what":"The Student t Distribution — dst_t","title":"The Student t Distribution — dst_t","text":"Makes distribution belonging family t distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Student t Distribution — dst_t","text":"","code":"dst_t(df)"},{"path":"https://distionary.netlify.app/reference/dst_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Student t Distribution — dst_t","text":"df Degrees freedom; positive.","code":""},{"path":"https://distionary.netlify.app/reference/dst_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Student t Distribution — dst_t","text":"","code":"dst_t(3) #> [1] \"t\"          \"parametric\" \"dst\"        #>  #>  name : #> [1] \"t\""},{"path":"https://distionary.netlify.app/reference/dst_unif.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Distribution — dst_unif","title":"Uniform Distribution — dst_unif","text":"Makes distribution belonging family Uniform distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_unif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Distribution — dst_unif","text":"","code":"dst_unif(min, max)"},{"path":"https://distionary.netlify.app/reference/dst_unif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Distribution — dst_unif","text":"min, max Minimum maximum distribution.","code":""},{"path":"https://distionary.netlify.app/reference/dst_unif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform Distribution — dst_unif","text":"","code":"dst_unif(0, 1) #> [1] \"unif\"       \"parametric\" \"dst\"        #>  #>  name : #> [1] \"unif\""},{"path":"https://distionary.netlify.app/reference/dst_weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull Distribution — dst_weibull","title":"Weibull Distribution — dst_weibull","text":"Makes distribution belonging family Weibull distributions.","code":""},{"path":"https://distionary.netlify.app/reference/dst_weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull Distribution — dst_weibull","text":"","code":"dst_weibull(shape, scale)"},{"path":"https://distionary.netlify.app/reference/dst_weibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull Distribution — dst_weibull","text":"shape Shape parameter; positive. scale Scale parameter; positive.","code":""},{"path":"https://distionary.netlify.app/reference/dst_weibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull Distribution — dst_weibull","text":"","code":"dst_weibull(1, 1) #> [1] \"weibull\"    \"parametric\" \"dst\"        #>  #>  name : #> [1] \"weibull\""},{"path":"https://distionary.netlify.app/reference/encapsulate_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a range of possible outcomes — encapsulate_p","title":"Find a range of possible outcomes — encapsulate_p","text":"Find range possible outcomes cdf evaluates values encapsulate range probabilities contained vector p.","code":""},{"path":"https://distionary.netlify.app/reference/encapsulate_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a range of possible outcomes — encapsulate_p","text":"","code":"encapsulate_p(distribution, p, direction)"},{"path":"https://distionary.netlify.app/reference/encapsulate_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a range of possible outcomes — encapsulate_p","text":"distribution distribution access cdf. p Vector values 0 1 (inclusive). direction One \"left\" calculating left-inverse, \"right\" calculating right-inverse.","code":""},{"path":"https://distionary.netlify.app/reference/encapsulate_p.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find a range of possible outcomes — encapsulate_p","text":"0 1 included vector p, one endpoints might infinite.","code":""},{"path":"https://distionary.netlify.app/reference/enframe_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Enframe a distributional representation's evaluation — enframe_general","title":"Enframe a distributional representation's evaluation — enframe_general","text":"workhorse enframe_ family functions. enframe_general() evaluates specified distributional representation multiple distributions, places results data frame tibble.","code":""},{"path":"https://distionary.netlify.app/reference/enframe_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enframe a distributional representation's evaluation — enframe_general","text":"","code":"enframe_general(..., at, arg_name, fn_prefix, sep, eval_fn, fn_args = list())"},{"path":"https://distionary.netlify.app/reference/enframe_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enframe a distributional representation's evaluation — enframe_general","text":"Vector values evaluate cdf . Must named using enframe_. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name. eval_fn Name eval_ function desired distributional representation, eval_cdf eval_density. fn_args named list arguments pass eval_fn function, besides distribution argument (strict argument common, perhaps use case).","code":""},{"path":"https://distionary.netlify.app/reference/enframe_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enframe a distributional representation's evaluation — enframe_general","text":"data frame tibble input argument (), evaluated distributional representation distribution ... column.","code":""},{"path":"https://distionary.netlify.app/reference/enframe_general.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enframe a distributional representation's evaluation — enframe_general","text":"one distribution specified ..., evaluation column named fn_prefix. one distribution specified ..., evaluation columns named prefix fn_prefix followed distribution names, sep . Distributions named first argument names, given, , input text. Names made unique using vctrs::vec_as_names() \"unique\" names repair. \"Unique\" chosen instead \"universal\" names anticipated syntactic eval_fn prefix; \"minimal\" sufficient may result columns names.","code":""},{"path":"https://distionary.netlify.app/reference/eval_quantile_from_cdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Quantiles from a CDF — eval_quantile_from_cdf","title":"Evaluate Quantiles from a CDF — eval_quantile_from_cdf","text":"Intended internal use . Calls directional_inverse() algorithm new entry .","code":""},{"path":"https://distionary.netlify.app/reference/eval_quantile_from_cdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Quantiles from a CDF — eval_quantile_from_cdf","text":"","code":"eval_quantile_from_cdf(distribution, at, tol, maxiter)"},{"path":"https://distionary.netlify.app/reference/eval_quantile_from_cdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Quantiles from a CDF — eval_quantile_from_cdf","text":"distribution distribution access cdf. vector values evaluate quantile function. tol, maxiter Tolerance (small positive number) maximum number iterations","code":""},{"path":"https://distionary.netlify.app/reference/evi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extreme Value Index — evi","title":"Extreme Value Index — evi","text":"Extreme Value Index","code":""},{"path":"https://distionary.netlify.app/reference/evi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Value Index — evi","text":"","code":"evi(distribution)"},{"path":"https://distionary.netlify.app/reference/evi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extreme Value Index — evi","text":"distribution Distribution obtain EVI .","code":""},{"path":"https://distionary.netlify.app/reference/evi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extreme Value Index — evi","text":"single numeric.","code":""},{"path":"https://distionary.netlify.app/reference/evi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extreme Value Index — evi","text":"","code":"evi(dst_gpd(0, 1, 2)) #> [1] 2 evi(dst_gpd(0, 1, -1)) #> [1] -1 evi(dst_unif(0, 10)) #> [1] -1 evi(dst_norm(5, 5)) #> [1] 0 evi(dst_empirical(1:10)) #> [1] NaN"},{"path":"https://distionary.netlify.app/reference/flexible_cdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the probability left or right of a number — prob_left","title":"Find the probability left or right of a number — prob_left","text":"Probability left right number, inclusive . prob_left() general cdf defined using either < <=, prob_right() general survival function defined using either > >=.","code":""},{"path":"https://distionary.netlify.app/reference/flexible_cdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the probability left or right of a number — prob_left","text":"","code":"prob_left(distribution, of, inclusive)  prob_right(distribution, of, inclusive)"},{"path":"https://distionary.netlify.app/reference/flexible_cdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the probability left or right of a number — prob_left","text":"distribution Distribution find probabilities . Find probability left right number. vector. inclusive included probability calculation? Logical.","code":""},{"path":"https://distionary.netlify.app/reference/gev_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Representations of the Generalized Extreme Value Distribution — pgev","title":"Representations of the Generalized Extreme Value Distribution — pgev","text":"Representations Generalized Extreme Value Distribution","code":""},{"path":"https://distionary.netlify.app/reference/gev_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Representations of the Generalized Extreme Value Distribution — pgev","text":"","code":"pgev(q, location, scale, shape)  qgev(p, location, scale, shape)  dgev(x, location, scale, shape)"},{"path":"https://distionary.netlify.app/reference/gev_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Representations of the Generalized Extreme Value Distribution — pgev","text":"location Location parameter; numeric. scale Scale parameter; positive numeric. shape Shape parameter; numeric. p Vector probabilities. x, q Vector quantiles.","code":""},{"path":"https://distionary.netlify.app/reference/gev_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Representations of the Generalized Extreme Value Distribution — pgev","text":"","code":"pgev(1:10, 0, 1, 1) #>  [1] 0.6065307 0.7165313 0.7788008 0.8187308 0.8464817 0.8668779 0.8824969 #>  [8] 0.8948393 0.9048374 0.9131007 dgev(1:10, 0, 2, 0) #>  [1] 0.165352149 0.127323190 0.089253259 0.059102476 0.037808090 0.023684505 #>  [7] 0.014649566 0.008991615 0.005493135 0.003346350 qgev(1:9 / 10, 2, 10, -2) #> [1] -19.5094906  -5.9514520  -0.2477526   2.8020565   4.5977349   5.6952859 #> [7]   6.3639149   6.7510348   6.9444958"},{"path":"https://distionary.netlify.app/reference/gev_t_function.html","id":null,"dir":"Reference","previous_headings":"","what":"'t()' function for calculating GEV quantities — gev_t_function","title":"'t()' function for calculating GEV quantities — gev_t_function","text":"'t()' function calculating GEV quantities","code":""},{"path":"https://distionary.netlify.app/reference/gev_t_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'t()' function for calculating GEV quantities — gev_t_function","text":"","code":"gev_t_function(x, location, scale, shape)"},{"path":"https://distionary.netlify.app/reference/gev_t_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'t()' function for calculating GEV quantities — gev_t_function","text":"x Argument function; vectorized. location Location parameter; numeric. scale Scale parameter; positive numeric. shape Shape parameter; numeric.","code":""},{"path":"https://distionary.netlify.app/reference/gev_t_function.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"'t()' function for calculating GEV quantities — gev_t_function","text":"shape parameter vectorized. function intended used location, scale, shape scalars.","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/gpd_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Representations of the Generalized Pareto Distribution — pgpd","title":"Representations of the Generalized Pareto Distribution — pgpd","text":"Representations Generalized Pareto Distribution","code":""},{"path":"https://distionary.netlify.app/reference/gpd_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Representations of the Generalized Pareto Distribution — pgpd","text":"","code":"pgpd(q, location, scale, shape, lower.tail = TRUE)  qgpd(p, location, scale, shape)  dgpd(x, location, scale, shape)"},{"path":"https://distionary.netlify.app/reference/gpd_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Representations of the Generalized Pareto Distribution — pgpd","text":"location Location parameter; numeric. scale Scale parameter; positive numeric. shape Shape parameter; numeric. lower.tail Logical. TRUE, cdf (default); FALSE, survival function. p Vector probabilities. x, q Vector quantiles.","code":""},{"path":"https://distionary.netlify.app/reference/gpd_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Representations of the Generalized Pareto Distribution — pgpd","text":"","code":"pgpd(1:10, 0, 1, 1) #>  [1] 0.5000000 0.6666667 0.7500000 0.8000000 0.8333333 0.8571429 0.8750000 #>  [8] 0.8888889 0.9000000 0.9090909 dgpd(1:10, 0, 2, 0) #>  [1] 0.303265330 0.183939721 0.111565080 0.067667642 0.041042499 0.024893534 #>  [7] 0.015098692 0.009157819 0.005554498 0.003368973 qgpd(1:9 / 10, 2, 10, -2) #> [1] 2.95 3.80 4.55 5.20 5.75 6.20 6.55 6.80 6.95"},{"path":"https://distionary.netlify.app/reference/hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard Function — eval_hazard","title":"Hazard Function — eval_hazard","text":"Access distribution's hazard function.","code":""},{"path":"https://distionary.netlify.app/reference/hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard Function — eval_hazard","text":"","code":"eval_hazard(distribution, at)  enframe_hazard(..., at, arg_name = \".arg\", fn_prefix = \"hazard\", sep = \"_\")"},{"path":"https://distionary.netlify.app/reference/hazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard Function — eval_hazard","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/hazard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hazard Function — eval_hazard","text":"evaluated hazard vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/hazard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hazard Function — eval_hazard","text":"","code":"d <- dst_unif(0, 4) eval_hazard(d, at = 0:4) #> [1] 0.2500000 0.3333333 0.5000000 1.0000000       Inf enframe_hazard(d, at = 0:4) #> # A tibble: 5 × 2 #>    .arg  hazard #>   <int>   <dbl> #> 1     0   0.25  #> 2     1   0.333 #> 3     2   0.5   #> 4     3   1     #> 5     4 Inf"},{"path":"https://distionary.netlify.app/reference/is_finite.html","id":null,"dir":"Reference","previous_headings":"","what":"Is a distribution a finite distribution? — is.empirical","title":"Is a distribution a finite distribution? — is.empirical","text":"difference checking whether distribution finite empirical -- functions exist simply completeness.","code":""},{"path":"https://distionary.netlify.app/reference/is_finite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is a distribution a finite distribution? — is.empirical","text":"","code":"is.empirical(object)  is_empirical(object)  is_finite_dst(object)  is.finite_dst(object)"},{"path":"https://distionary.netlify.app/reference/is_finite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is a distribution a finite distribution? — is.empirical","text":"object Object check","code":""},{"path":"https://distionary.netlify.app/reference/moments.html","id":null,"dir":"Reference","previous_headings":"","what":"Moments of a Distribution — kurtosis_raw","title":"Moments of a Distribution — kurtosis_raw","text":"Get common moment-related quantities distribution: mean, variance, standard deviation (sd), skewness, kurtosis.","code":""},{"path":"https://distionary.netlify.app/reference/moments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moments of a Distribution — kurtosis_raw","text":"","code":"kurtosis_raw(distribution)  kurtosis_exc(distribution)  # S3 method for dst mean(x, ...)  # S3 method for dst median(x, ...)  skewness(distribution)  stdev(distribution)  # S3 method for dst stdev(distribution)  variance(distribution)"},{"path":"https://distionary.netlify.app/reference/moments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moments of a Distribution — kurtosis_raw","text":"distribution Distribution compute skewness . x Distribution calculate median . ... calculating mean via integration quantile function, arguments passed stats::integrate().","code":""},{"path":"https://distionary.netlify.app/reference/moments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moments of a Distribution — kurtosis_raw","text":"single numeric.","code":""},{"path":"https://distionary.netlify.app/reference/moments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Moments of a Distribution — kurtosis_raw","text":"method associated subclass x, moments calculated using stats::integrate() quantile function. Median calculated 0.5-quantile. , median non-unique, take smallest possibilities.","code":""},{"path":"https://distionary.netlify.app/reference/moments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moments of a Distribution — kurtosis_raw","text":"","code":"a <- dst_gpd(0, 1, 0.5) b <- dst_unif(0, 1) c <- dst_norm(3, 4) mean(a) #> [1] 2 variance(b) #> [1] 0.08333333 kurtosis_raw(c) #> [1] 3 kurtosis_exc(c) #> [1] 0"},{"path":"https://distionary.netlify.app/reference/narrow_by_discretes.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a range of possible values by a discrete — narrow_by_discretes","title":"Narrow a range of possible values by a discrete — narrow_by_discretes","text":"finding inverse cdf p, solution low high, function narrows range based intermediate discrete value, zeroes-discrete value solution.","code":""},{"path":"https://distionary.netlify.app/reference/narrow_by_discretes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a range of possible values by a discrete — narrow_by_discretes","text":"","code":"narrow_by_discretes(distribution, p, low, high, discrete, direction)"},{"path":"https://distionary.netlify.app/reference/narrow_by_discretes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a range of possible values by a discrete — narrow_by_discretes","text":"distribution distribution access cdf. p Value cdf calculate inverse . low, high Single numerics specifying lower upper bound look . discrete Numeric value indicating discrete point possibly narrow range . NA; length 0; outside range c(low, high). direction One \"left\" calculating left-inverse, \"right\" calculating right-inverse.","code":""},{"path":"https://distionary.netlify.app/reference/narrow_by_discretes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Narrow a range of possible values by a discrete — narrow_by_discretes","text":"benefit step inverting cdf return exact discrete value p falls within jump discontinuity.","code":""},{"path":"https://distionary.netlify.app/reference/new_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor Function for ","title":"Constructor Function for ","text":"Constructor Function \"dst\" Objects","code":""},{"path":"https://distionary.netlify.app/reference/new_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor Function for ","text":"","code":"new_distribution(l, variable, ..., class = character())"},{"path":"https://distionary.netlify.app/reference/new_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor Function for ","text":"l List containing components distribution object. variable Type random variable: \"continuous\", \"discrete\", \"mixed\". ... Attributes add list. class making subclass, specify name .","code":""},{"path":"https://distionary.netlify.app/reference/new_finite.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor Function for Finite Distributions — new_finite","title":"Constructor Function for Finite Distributions — new_finite","text":"Constructor Function Finite Distributions","code":""},{"path":"https://distionary.netlify.app/reference/new_finite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor Function for Finite Distributions — new_finite","text":"","code":"new_finite(l, variable, ..., class = character())"},{"path":"https://distionary.netlify.app/reference/new_finite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor Function for Finite Distributions — new_finite","text":"l List containing components step distribution object. variable Type random variable: \"continuous\", \"discrete\", \"mixed\". ... Attributes add list. class making subclass, specify name .","code":""},{"path":"https://distionary.netlify.app/reference/new_parametric.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor Function for ","title":"Constructor Function for ","text":"Constructor Function \"parametric\" distribution Objects","code":""},{"path":"https://distionary.netlify.app/reference/new_parametric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor Function for ","text":"","code":"new_parametric(l, variable, ..., class = character())"},{"path":"https://distionary.netlify.app/reference/new_parametric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor Function for ","text":"l List containing components parametric distribution object. variable Type random variable: \"continuous\", \"discrete\", \"mixed\". ... Attributes add list. class making subclass, specify name .","code":""},{"path":"https://distionary.netlify.app/reference/odds.html","id":null,"dir":"Reference","previous_headings":"","what":"Odds Function — eval_odds","title":"Odds Function — eval_odds","text":"Access distribution's odds function. odds event probability p p / (1 - p).","code":""},{"path":"https://distionary.netlify.app/reference/odds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Odds Function — eval_odds","text":"","code":"eval_odds(distribution, at)  enframe_odds(..., at, arg_name = \".arg\", fn_prefix = \"odds\", sep = \"_\")"},{"path":"https://distionary.netlify.app/reference/odds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Odds Function — eval_odds","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/odds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Odds Function — eval_odds","text":"evaluated odds vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/odds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Odds Function — eval_odds","text":"","code":"d <- dst_pois(1) eval_odds(d, at = c(1, 2, 2.5)) #> [1] 0.5819767 0.2253997 0.0000000 enframe_odds(d, at = 0:4) #> # A tibble: 5 × 2 #>    .arg   odds #>   <int>  <dbl> #> 1     0 0.582  #> 2     1 0.582  #> 3     2 0.225  #> 4     3 0.0653 #> 5     4 0.0156"},{"path":"https://distionary.netlify.app/reference/parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters of a Distribution — parameters","title":"Parameters of a Distribution — parameters","text":"Parameters Distribution","code":""},{"path":"https://distionary.netlify.app/reference/parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters of a Distribution — parameters","text":"","code":"parameters(distribution)"},{"path":"https://distionary.netlify.app/reference/parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters of a Distribution — parameters","text":"distribution Distribution.","code":""},{"path":"https://distionary.netlify.app/reference/parametric.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Distribution Objects — is_parametric","title":"Parametric Distribution Objects — is_parametric","text":"Parametric Distribution Objects","code":""},{"path":"https://distionary.netlify.app/reference/parametric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Distribution Objects — is_parametric","text":"","code":"is_parametric(object)  is.parametric(object)"},{"path":"https://distionary.netlify.app/reference/parametric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Distribution Objects — is_parametric","text":"object Object tested","code":""},{"path":"https://distionary.netlify.app/reference/pdq_functions_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Are there p/d/q functions available? — pdq_functions_exist","title":"Are there p/d/q functions available? — pdq_functions_exist","text":"given distribution name, \"norm\", checks see whether p/d/q functions exist distribution -- pnorm(), dnorm(), qnorm(). Methods eval_cdf(), eval_quantile(), eval_density/mass() suffice alternatives. Internal function.","code":""},{"path":"https://distionary.netlify.app/reference/pdq_functions_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are there p/d/q functions available? — pdq_functions_exist","text":"","code":"pdq_functions_exist(name)"},{"path":"https://distionary.netlify.app/reference/pdq_functions_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are there p/d/q functions available? — pdq_functions_exist","text":"name Name distribution; suffix p/d/q.","code":""},{"path":"https://distionary.netlify.app/reference/pdq_functions_exist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are there p/d/q functions available? — pdq_functions_exist","text":"TRUE p/d/q functions available distribution; FALSE otherwise.","code":""},{"path":"https://distionary.netlify.app/reference/plot.dst.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Distribution — plot.dst","title":"Plot a Distribution — plot.dst","text":"Plot functional representation distribution. Wrapper around graphics::curve function.","code":""},{"path":"https://distionary.netlify.app/reference/plot.dst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Distribution — plot.dst","text":"","code":"# S3 method for dst plot(   x,   what = c(\"density\", \"cdf\", \"survival\", \"quantile\", \"hazard\", \"chf\"),   ... )"},{"path":"https://distionary.netlify.app/reference/plot.dst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Distribution — plot.dst","text":"x Distribution object Name representation plot. ... arguments pass graphics::curve function. plot(dst_norm(5, 5)) plot(dst_empirical(-5:2), \"cdf\", n = 1001)","code":""},{"path":"https://distionary.netlify.app/reference/pmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Mass Function — eval_pmf","title":"Probability Mass Function — eval_pmf","text":"Access distribution's probability mass function (pmf).","code":""},{"path":"https://distionary.netlify.app/reference/pmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Mass Function — eval_pmf","text":"","code":"eval_pmf(distribution, at, strict = TRUE)  enframe_pmf(   ...,   at,   arg_name = \".arg\",   fn_prefix = \"pmf\",   sep = \"_\",   strict = TRUE )"},{"path":"https://distionary.netlify.app/reference/pmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability Mass Function — eval_pmf","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. strict evaluate pmf exists? TRUE ; FALSE, simply evaluates probability specified outcomes. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/pmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability Mass Function — eval_pmf","text":"evaluated probabilities vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/pmf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability Mass Function — eval_pmf","text":"","code":"d <- dst_empirical(1:10) eval_pmf(d, at = c(1, 2, 2.5)) #> [1] 0.1 0.1 0.0 enframe_pmf(d, at = 0:4) #> # A tibble: 5 × 2 #>    .arg   pmf #>   <int> <dbl> #> 1     0   0   #> 2     1   0.1 #> 3     2   0.1 #> 4     3   0.1 #> 5     4   0.1 eval_pmf(dst_norm(0, 1), at = -3:3, strict = FALSE) #> [1] 0 0 0 0 0 0 0"},{"path":"https://distionary.netlify.app/reference/pretty_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the name of a distribution, possibly with parameters — pretty_name","title":"Print the name of a distribution, possibly with parameters — pretty_name","text":"Print name distribution, possibly parameters","code":""},{"path":"https://distionary.netlify.app/reference/pretty_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the name of a distribution, possibly with parameters — pretty_name","text":"","code":"pretty_name(distribution, param_digits = 0)"},{"path":"https://distionary.netlify.app/reference/pretty_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the name of a distribution, possibly with parameters — pretty_name","text":"distribution Distribution object. param_digits many significant digits include displaying parameters? 0 want display parameters.","code":""},{"path":"https://distionary.netlify.app/reference/pretty_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the name of a distribution, possibly with parameters — pretty_name","text":"character containing distribution's name, possibly followed parameters brackets.","code":""},{"path":"https://distionary.netlify.app/reference/quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Quantiles — eval_quantile","title":"Distribution Quantiles — eval_quantile","text":"Access distribution's quantiles.","code":""},{"path":"https://distionary.netlify.app/reference/quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Quantiles — eval_quantile","text":"","code":"eval_quantile(distribution, at)  enframe_quantile(..., at, arg_name = \".arg\", fn_prefix = \"quantile\", sep = \"_\")"},{"path":"https://distionary.netlify.app/reference/quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Quantiles — eval_quantile","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution Quantiles — eval_quantile","text":"evaluated quantiles vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution Quantiles — eval_quantile","text":"","code":"d <- dst_unif(0, 4) eval_quantile(d, at = 1:9 / 10) #> [1] 0.4 0.8 1.2 1.6 2.0 2.4 2.8 3.2 3.6 enframe_quantile(d, at = 1:9 / 10) #> # A tibble: 9 × 2 #>    .arg quantile #>   <dbl>    <dbl> #> 1   0.1      0.4 #> 2   0.2      0.8 #> 3   0.3      1.2 #> 4   0.4      1.6 #> 5   0.5      2   #> 6   0.6      2.4 #> 7   0.7      2.8 #> 8   0.8      3.2 #> 9   0.9      3.6"},{"path":"https://distionary.netlify.app/reference/quantity_parametric.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab a quantity from the database — quantity_parametric","title":"Grab a quantity from the database — quantity_parametric","text":"parametric distribution, evaluates quantity (mean, median, range, ...) distribution entry .quantities database. distributions without \"parametric\" (sub-) class, quantity evaluation delegated next higher level class.","code":""},{"path":"https://distionary.netlify.app/reference/quantity_parametric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab a quantity from the database — quantity_parametric","text":"","code":"quantity_parametric(distribution, quantity)"},{"path":"https://distionary.netlify.app/reference/quantity_parametric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab a quantity from the database — quantity_parametric","text":"distribution distribution. quantity Character; name quantity extract.","code":""},{"path":"https://distionary.netlify.app/reference/quantity_parametric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab a quantity from the database — quantity_parametric","text":"desired quantity, evaluated.","code":""},{"path":"https://distionary.netlify.app/reference/range.html","id":null,"dir":"Reference","previous_headings":"","what":"Range of Distribution — range.finite","title":"Range of Distribution — range.finite","text":"Range returns 2 index vector 0th index containing minimum value, 1st index containing maximum value given distribution.","code":""},{"path":"https://distionary.netlify.app/reference/range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range of Distribution — range.finite","text":"","code":"# S3 method for finite range(distribution, ...)  # S3 method for dst range(distribution, ...)"},{"path":"https://distionary.netlify.app/reference/range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range of Distribution — range.finite","text":"distribution Single distribution compute range . ... used; vestige base::range() S3 generic.","code":""},{"path":"https://distionary.netlify.app/reference/range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Range of Distribution — range.finite","text":"methods distribution's class, range calculated using eval_quantile() 0 1.","code":""},{"path":"https://distionary.netlify.app/reference/range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Range of Distribution — range.finite","text":"","code":"a <- dst_gpd(0, 1, 0.5) b <- dst_unif(0, 1) c <- dst_norm(3, 4) range(a) #> [1]   0 Inf range(b) #> [1] 0 1 range(c) #> [1] -Inf  Inf"},{"path":"https://distionary.netlify.app/reference/realise.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Sample from a Distribution — realise","title":"Generate a Sample from a Distribution — realise","text":"Draw n independent observations distribution.","code":""},{"path":"https://distionary.netlify.app/reference/realise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Sample from a Distribution — realise","text":"","code":"realise(distribution, n = 1)  realize(distribution, n = 1)  observe(distribution, n = 1)"},{"path":"https://distionary.netlify.app/reference/realise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Sample from a Distribution — realise","text":"distribution Distribution. n Number observations generate","code":""},{"path":"https://distionary.netlify.app/reference/realise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Sample from a Distribution — realise","text":"Vector independent values drawn inputted distribution","code":""},{"path":"https://distionary.netlify.app/reference/realise.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate a Sample from a Distribution — realise","text":"realise(), realize(), observe() thing. Although language observe() common, alias , function name common amongst packages.","code":""},{"path":"https://distionary.netlify.app/reference/representation_as_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a distribution's representation as a function — representation_as_function","title":"Get a distribution's representation as a function — representation_as_function","text":"Get distribution's representation function","code":""},{"path":"https://distionary.netlify.app/reference/representation_as_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a distribution's representation as a function — representation_as_function","text":"","code":"representation_as_function(distribution, representation)"},{"path":"https://distionary.netlify.app/reference/representation_as_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a distribution's representation as a function — representation_as_function","text":"distribution Distribution extract representation . representation Character, \"cdf\". general, suffix eval_ function.","code":""},{"path":"https://distionary.netlify.app/reference/representation_as_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a distribution's representation as a function — representation_as_function","text":"function one argument () fed corresponding eval_ function.","code":""},{"path":"https://distionary.netlify.app/reference/return.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Level Function — eval_return","title":"Return Level Function — eval_return","text":"Compute return levels (quantiles) distribution inputting return periods.","code":""},{"path":"https://distionary.netlify.app/reference/return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Level Function — eval_return","text":"","code":"eval_return(distribution, at)  enframe_return(..., at, arg_name = \".arg\", fn_prefix = \"return\", sep = \"_\")"},{"path":"https://distionary.netlify.app/reference/return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Level Function — eval_return","text":"distribution, ... distribution, possibly multiple distributions case .... Vector return periods >=1. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Level Function — eval_return","text":"return levels associated specified return periods vector form (eval_) data frame tibble form (enframe_). function simply quantile function evaluated 1 - 1 / .","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/return.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Level Function — eval_return","text":"","code":"d <- dst_unif(0, 4) eval_return(d, at = c(2, 25, 100, 200)) #> [1] 2.00 3.84 3.96 3.98 enframe_chf(d, at = c(2, 25, 100, 200)) #> # A tibble: 4 × 2 #>    .arg     chf #>   <dbl>   <dbl> #> 1     2   0.693 #> 2    25 Inf     #> 3   100 Inf     #> 4   200 Inf"},{"path":"https://distionary.netlify.app/reference/survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Function — eval_survival","title":"Survival Function — eval_survival","text":"Access distribution's survival function.","code":""},{"path":"https://distionary.netlify.app/reference/survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Function — eval_survival","text":"","code":"eval_survival(distribution, at)  enframe_survival(..., at, arg_name = \".arg\", fn_prefix = \"survival\", sep = \"_\")"},{"path":"https://distionary.netlify.app/reference/survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Function — eval_survival","text":"distribution, ... distribution, possibly multiple distributions case .... Vector values evaluate cdf . Must named using enframe_. arg_name enframe_, name column containing function arguments. fn_prefix enframe_, name function appear column(s). sep enframe'ing one distribution, character separating fn_name distribution name.","code":""},{"path":"https://distionary.netlify.app/reference/survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Function — eval_survival","text":"evaluated survival function vector form (eval_) data frame tibble form (enframe_).","code":""},{"path":[]},{"path":"https://distionary.netlify.app/reference/survival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Function — eval_survival","text":"","code":"d <- dst_unif(0, 4) eval_survival(d, at = 0:4) #> [1] 1.00 0.75 0.50 0.25 0.00 enframe_survival(d, at = 0:4) #> # A tibble: 5 × 2 #>    .arg survival #>   <int>    <dbl> #> 1     0     1    #> 2     1     0.75 #> 3     2     0.5  #> 4     3     0.25 #> 5     4     0"},{"path":"https://distionary.netlify.app/reference/variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Variable of a Distribution — variable","title":"Random Variable of a Distribution — variable","text":"Information random variable distribution.","code":""},{"path":"https://distionary.netlify.app/reference/variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Variable of a Distribution — variable","text":"","code":"variable(distribution)"},{"path":"https://distionary.netlify.app/reference/variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Variable of a Distribution — variable","text":"distribution Distribution.","code":""},{"path":"https://distionary.netlify.app/reference/variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Variable of a Distribution — variable","text":"now, type variable -- one \"continuous\", \"discrete\", \"mixed\".","code":""}]
