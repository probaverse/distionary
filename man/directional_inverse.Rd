% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_from_network-quantile.R
\name{directional_inverse}
\alias{directional_inverse}
\title{Algorithm to Compute a Directional Inverse}
\usage{
directional_inverse(distribution, p, low, high, tol, maxiter, direction)
}
\arguments{
\item{distribution}{A distribution having access to a cdf.}

\item{p}{Single value for which to calculate the left inverse.}

\item{low, high}{Single numeric values forming a range
within which to search for the solution.}

\item{tol, maxiter}{Tolerance (a small positive number) and maximum number
of iterations}

\item{direction}{One of \code{"left"} for calculating left-inverse, or
\code{"right"} for calculating right-inverse.}
}
\value{
The left inverse of the CDF evaluated at \code{p}.
}
\description{
Calculates the smallest value for which a function \code{f}
evaluates to be greater than or equal to \code{y} -- that is,
the left inverse of \code{f} at \code{y}.
}
\details{
This algorithm works by progressively
cutting the specified range in half, moving into the left or right
half depending on where the solution is.
}
\examples{
d <- distribution(cdf = \(x) pmin(pmax(x, 0), 1))
distionary:::directional_inverse(
  d, p = 0.2, low = 0, high = 1, tol = 1e-9, maxiter = 200L,
  direction = "left"
)
}
